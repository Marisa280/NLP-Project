import streamlit as st
import pandas as pd

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å URL
def load_data():
    url = "https://raw.githubusercontent.com/username/repository/branch/data_clean.csv"  # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô URL ‡∏à‡∏£‡∏¥‡∏á‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå
    data = pd.read_csv(url)
    return data

def filter_data(data, keyword, price_type):
    # ‡∏Å‡∏£‡∏≠‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö keyword
    filtered_data = data[data['menu'].str.contains(keyword, case=False, na=False)]
    
    # ‡πÅ‡∏õ‡∏•‡∏á price_level ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
    price_map = {
        "‡∏ï‡πà‡∏≥‡∏Å‡∏ß‡πà‡∏≤ 100": 1,
        "100-250": 2,
        "251-500": 3,
        "501-1,000": 4,
        "‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 1,000": 5
    }
    selected_price = price_map.get(price_type, None)
    
    # ‡∏Å‡∏£‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏£‡∏≤‡∏Ñ‡∏≤
    if selected_price is not None:
        filtered_data = filtered_data[filtered_data["price_level"] == selected_price]

    return filtered_data

def main():
    st.set_page_config(page_title="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡∏ä‡∏≠‡∏ö", page_icon="ü•ô")

    st.markdown("""
        <style>
        @import url('https://fonts.googleapis.com/css2?family=Kanit:wght@300;400;600&display=swap');
        * {
            font-family: 'Kanit', sans-serif;
        }
        .stTextInput, .stNumberInput, .stButton > button {
            border-radius: 10px;
            font-size: 18px;
        }
        .stButton > button {
            background-color: #ff7043;
            color: white;
            border: none;
        }
        .stButton > button:hover {
            background-color: #ff5722;
        }
        h1 {
            font-family: 'Kanit', sans-serif !important;   
            font-weight: 600;
        }
        </style>
    """, unsafe_allow_html=True)

    st.title("ü•û ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏°‡∏ô‡∏π")

    data = load_data()  # ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å URL

    keyword = st.text_input("üîç ‡πÉ‡∏™‡πà‡πÄ‡∏°‡∏ô‡∏π‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ä‡∏≠‡∏ö‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á")
    
    price_type = st.selectbox("üíµ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏≤‡∏Ñ‡∏≤‡πÇ‡∏î‡∏¢‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì", ["‡∏ï‡πà‡∏≥‡∏Å‡∏ß‡πà‡∏≤ 100", "100-250", "251-500", "501-1,000", "‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 1,000"])

    if st.button("‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÄ‡∏°‡∏ô‡∏π"):
        if keyword:
            results = filter_data(data, keyword, price_type)
            if not results.empty:
                st.success(f"üîç ‡∏û‡∏ö {len(results)} ‡∏£‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì")
                for _, row in results.iterrows():
                    st.markdown(f"""
                    **üìå ‡∏ä‡∏∑‡πà‡∏≠‡∏£‡πâ‡∏≤‡∏ô:** {row["Name"]}  
                    **üíµ ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÇ‡∏î‡∏¢‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì:** {row["price_level"]}  
                    **üçΩ ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà:** {row["category"]}  
                    üîó [‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏£‡πâ‡∏≤‡∏ô]({row["url"]})  
                    --- 
                    """)
            else:
                st.warning("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì")
        else:
            st.warning("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡πÄ‡∏°‡∏ô‡∏π‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤")

if __name__ == "__main__":   
    main()
